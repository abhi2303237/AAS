openapi: 3.0.1
info:
  title: BaSyx Concept Description Repository
  description: Concept Description API
  contact:
    name: The BaSyx Developers
    url: https://www.eclipse.org/basyx/
    email: basyx-dev@eclipse.org
  license:
    name: MIT Licence
    url: https://opensource.org/licenses/mit-license.php
  version: '2.0'
servers:
- url: http://localhost:8081
  description: Generated server url
tags:
- name: Registry and Discovery Interface
  description: the Registry and Discovery Interface API
paths:
  "/concept-descriptions/{cdIdentifier}":
    get:
      tags:
      - Concept Description Repository API
      summary: Returns a specific Concept Description
      operationId: getConceptDescriptionById
      parameters:
      - name: cdIdentifier
        in: path
        description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '400':
          description: Bad Request, e.g. the request parameters of the format of the
            request body is wrong.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
    put:
      tags:
      - Concept Description Repository API
      summary: Updates an existing Concept Description
      operationId: putConceptDescriptionById
      parameters:
      - name: cdIdentifier
        in: path
        description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ConceptDescription"
        required: true
      responses:
        '200':
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '204':
          description: Concept Description updated successfully
        '400':
          description: Bad Request, e.g. the request parameters of the format of the
            request body is wrong.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
    delete:
      tags:
      - Concept Description Repository API
      summary: Deletes a Concept Description
      operationId: deleteConceptDescriptionById
      parameters:
      - name: cdIdentifier
        in: path
        description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '204':
          description: Concept Description deleted successfully
        '400':
          description: Bad Request, e.g. the request parameters of the format of the
            request body is wrong.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
  "/concept-descriptions":
    get:
      tags:
      - Concept Description Repository API
      summary: Returns all Concept Descriptions
      operationId: getAllConceptDescriptions
      parameters:
      - name: idShort
        in: query
        description: The Concept Description’s IdShort
        required: false
        schema:
          type: string
      - name: isCaseOf
        in: query
        description: IsCaseOf reference (UTF8-BASE64-URL-encoded)
        required: false
        schema:
          type: string
      - name: dataSpecificationRef
        in: query
        description: DataSpecification reference (UTF8-BASE64-URL-encoded)
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: string
          enum:
          - '1'
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        required: false
        schema:
          "$ref": "#/components/schemas/Base64UrlEncodedCursor"
      responses:
        '200':
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '400':
          description: Bad Request, e.g. the request parameters of the format of the
            request body is wrong.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
    post:
      tags:
      - Concept Description Repository API
      summary: Creates a new Concept Description
      operationId: postConceptDescription
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ConceptDescription"
        required: true
      responses:
        '200':
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '201':
          description: Concept Description created successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConceptDescription"
        '400':
          description: Bad Request, e.g. the request parameters of the format of the
            request body is wrong.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '409':
          description: Conflict, a resource which shall be created exists already.
            Might be thrown if a Submodel or SubmodelElement with the same ShortId
            is contained in a POST request.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
  "/description":
    get:
      tags:
      - Registry and Discovery Interface
      summary: Returns the self-describing information of a network resource (ServiceDescription)
      operationId: getDescription
      responses:
        '200':
          description: Requested Description
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServiceDescription"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
components:
  schemas:
    AdministrativeInformation:
      type: object
      properties:
        version:
          type: string
        creator:
          "$ref": "#/components/schemas/Reference"
        templateId:
          type: string
        revision:
          type: string
        embeddedDataSpecifications:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddedDataSpecification"
    ConceptDescription:
      type: object
      properties:
        isCaseOf:
          type: array
          items:
            "$ref": "#/components/schemas/Reference"
        id:
          type: string
        administration:
          "$ref": "#/components/schemas/AdministrativeInformation"
        displayName:
          type: array
          items:
            "$ref": "#/components/schemas/LangStringNameType"
        description:
          type: array
          items:
            "$ref": "#/components/schemas/LangStringTextType"
        category:
          type: string
        idShort:
          type: string
        extensions:
          type: array
          items:
            "$ref": "#/components/schemas/Extension"
        embeddedDataSpecifications:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddedDataSpecification"
    DataSpecificationContent:
      type: object
    EmbeddedDataSpecification:
      type: object
      properties:
        dataSpecification:
          "$ref": "#/components/schemas/Reference"
        dataSpecificationContent:
          "$ref": "#/components/schemas/DataSpecificationContent"
    Extension:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueType:
          type: string
          enum:
          - ANY_URI
          - BASE64BINARY
          - BOOLEAN
          - BYTE
          - DATE
          - DATE_TIME
          - DECIMAL
          - DOUBLE
          - DURATION
          - FLOAT
          - GDAY
          - GMONTH
          - GMONTH_DAY
          - GYEAR
          - GYEAR_MONTH
          - HEX_BINARY
          - INT
          - INTEGER
          - LONG
          - NEGATIVE_INTEGER
          - NON_NEGATIVE_INTEGER
          - NON_POSITIVE_INTEGER
          - POSITIVE_INTEGER
          - SHORT
          - STRING
          - TIME
          - UNSIGNED_BYTE
          - UNSIGNED_INT
          - UNSIGNED_LONG
          - UNSIGNED_SHORT
        refersTo:
          type: array
          items:
            "$ref": "#/components/schemas/Reference"
        semanticId:
          "$ref": "#/components/schemas/Reference"
        supplementalSemanticIds:
          type: array
          items:
            "$ref": "#/components/schemas/Reference"
    Key:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
          enum:
          - ANNOTATED_RELATIONSHIP_ELEMENT
          - ASSET_ADMINISTRATION_SHELL
          - BASIC_EVENT_ELEMENT
          - BLOB
          - CAPABILITY
          - CONCEPT_DESCRIPTION
          - DATA_ELEMENT
          - ENTITY
          - EVENT_ELEMENT
          - FILE
          - FRAGMENT_REFERENCE
          - GLOBAL_REFERENCE
          - IDENTIFIABLE
          - MULTI_LANGUAGE_PROPERTY
          - OPERATION
          - PROPERTY
          - RANGE
          - REFERABLE
          - REFERENCE_ELEMENT
          - RELATIONSHIP_ELEMENT
          - SUBMODEL
          - SUBMODEL_ELEMENT
          - SUBMODEL_ELEMENT_COLLECTION
          - SUBMODEL_ELEMENT_LIST
    LangStringNameType:
      type: object
      properties:
        language:
          type: string
        text:
          type: string
    LangStringTextType:
      type: object
      properties:
        language:
          type: string
        text:
          type: string
    Reference:
      type: object
      properties:
        type:
          type: string
          enum:
          - EXTERNAL_REFERENCE
          - MODEL_REFERENCE
        keys:
          type: array
          items:
            "$ref": "#/components/schemas/Key"
        referredSemanticId:
          "$ref": "#/components/schemas/Reference"
    Message:
      type: object
      properties:
        timestamp:
          type: string
        text:
          type: string
        code:
          type: string
        correlationId:
          type: string
        messageType:
          type: string
          enum:
          - ERROR
          - EXCEPTION
          - INFO
          - WARNING
    Result:
      type: object
      properties:
        messages:
          type: array
          items:
            "$ref": "#/components/schemas/Message"
    ServiceDescription:
      type: object
      properties:
        profiles:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            maxLength: 2147483647
            minLength: 1
            type: string
            enum:
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-003
            - https://admin-shell.io/aas/API/3/0/AasxFileServerServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/DiscoveryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-003
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-004
            - https://admin-shell.io/aas/API/3/0/ConceptDescriptionServiceSpecification/SSP-001
      description: The Description object enables servers to present their capabilities
        to the clients, in particular which profiles they implement. At least one
        defined profile is required. Additional, proprietary attributes might be included.
        Nevertheless, the server must not expect that a regular client understands
        them.
    Base64UrlEncodedCursor:
      type: object
      properties:
        encodedCursor:
          type: string
        decodedCursor:
          type: string
